CountDownLatch：
  允许一个或多个线程等待其他线程完成操作。只能用一次。
  
CyclicBarrier：
  可循环使用（Cyclic）的屏障（Barrier）。所有线程到达屏障时，所有线程才会继续执行。
  -可用于多线程计数，合并计算结果。

Semaphore
  Semaphore（信号量）用来控制同时访问特定资源的线程数量。用于流量控制，如数据库链接等。
10     public static void main(String[] args) {
11         for (int i = 0; i < THREAD_COUNT; i++) {
12             threadPool.execute(new Runnable() {
13                 @Override
14                 public void run() {
15                     try {
16                         s.acquire();
17                         System.out.println("save data");
18                         s.release();
19                     } catch (InterruptedException e) {
20                     }
21                 }
22             });
23         }
24 
25         threadPool.shutdown();
26     }

Exchanger
Exchanger用于进行线程间的数据交换。它提供一个同步点，在这个同步点两个线程可以交换彼此的数据。
